def load_image(image_path):
    image = tf.io.read_file(image_path)
    image = tf.image.decode_jpeg(image, channels=3)  # Ajusta el número de canales según tus imágenes
    return image

# Aplica transformaciones a la imagen
def apply_transformations(image):
    # Aquí puedes aplicar las transformaciones deseadas
    # Puedes utilizar las funciones de preprocesamiento de imágenes de TensorFlow, como resize, flip, rotate, etc.
    # Por ejemplo:
    image = tf.image.random_flip_left_right(image)
    image = tf.image.random_flip_up_down(image)
    image = tf.image.random_brightness(image, max_delta=0.2)
    image = tf.image.random_contrast(image, lower=0.5, upper=1.5)
    # ...

    return image

# Genera y guarda las imágenes transformadas
def generate_transformed_images(image_paths, labels, output_dir, num_transformations=5):
    for i, image_path in enumerate(image_paths):
        image = load_image(image_path)
        image_name = f"image_{i}"
        image_dir = f"{output_dir}/{image_name}"
        tf.io.gfile.makedirs(image_dir)  # Crea el directorio para guardar las imágenes transformadas
